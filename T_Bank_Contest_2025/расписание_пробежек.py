# Чтобы набрать форму к лету, Виктория решила бегать каждый день. До лета осталось всего n дней — именно на протяжении этого срока она и будет бегать. Ее личный тренер уже составил ей расписание: в i-й день Виктория должна пробежать ai километров.
# Виктория считает i-й (3<=i<=n) день хорошим, если в этот день она пробежит не меньше, чем в первый день, и не больше, чем во второй день. Расписание же ей понравится, если хотя бы m дней будут хорошими. В расписании можно делать корректировки: произвольное ai (1<=i<=n) можно увеличить или уменьшить на 1 километр. Разрешается корректировать один и тот же день несколько раз.
# Какое минимальное корректировок необходимо внести в расписание, чтобы оно понравилось Виктории?
# Формат входных данных
# Первая строка содержит числа n (3<=n<=2*10^5) и m (1<=m<=n-2) — количество дней до лета и количество хороших дней, которое необходимо Виктории, чтобы ей понравилось расписание.
# Следующая строка содержит числа a1, a2, ... , an (1<=ai<=10^9), где ai— количество километров, которое должна пробежать Виктория согласно начальному расписанию.
# Формат выходных данных
# Выведите одно число — минимальное количество корректировок, которое необходимо внести в расписание, чтобы оно понравилось Виктории.
# Комментарий к примеру
# В примере можно дважды уменьшить a3 на единицу, чтобы расписание понравилось Виктории.
# Примеры данных
# ввод:
# 3 1
# 3 4 6
# Вывод:
# 2

n, m = map(int, input().split())
a = list(map(int, input().split()))

a1 = a[0]
a2 = a[1]

corrections = []
good_days = 0

for i in range(2, n):
    if a1 <= a[i] <= a2:
        good_days += 1
    else:
        if a[i] < a1:
            corrections.append(a1 - a[i])
        elif a[i] > a2:
            corrections.append(a[i] - a2)

if good_days >= m:
    print(0)
else:
    corrections.sort()
    result = sum(corrections[:m - good_days])
    print(result)
